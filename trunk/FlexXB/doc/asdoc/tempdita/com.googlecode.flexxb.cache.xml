<?xml version="1.0" encoding="UTF-8"?><apiPackage id="com.googlecode.flexxb.cache"><apiName>com.googlecode.flexxb.cache</apiName><apiDetail/><apiClassifier id="com.googlecode.flexxb.cache:ICacheProvider"><apiName>ICacheProvider</apiName><shortdesc>
	 This interface defines a cache provider recognised by FlexXB engine.</shortdesc><prolog><author>Alexutzutz
	 
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 This interface defines a cache provider recognised by FlexXB engine.  
	 </apiDesc></apiClassifierDetail><apiOperation id="com.googlecode.flexxb.cache:ICacheProvider:com.googlecode.flexxb.cache:ICacheProvider:clearCache"><apiName>clearCache</apiName><shortdesc>
		 Clears the cache for all the objects with given class.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>typeList</apiItemName><apiType value="restParam"/><apiDesc>List of types for which the cache will be flushed. ALL instances will be flushed if null or empty
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Clears the cache for all the objects with given class.
		 If no class is specified, then all cache is cleared.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.googlecode.flexxb.cache:ICacheProvider:com.googlecode.flexxb.cache:ICacheProvider:getFromCache"><apiName>getFromCache</apiName><shortdesc>
		 Get an instance of the specified type and with the specified id
		 from the cache
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>instance defined by id and type if it exists, null otherwise
		 
		 </apiDesc><apiType value="any"/></apiReturn><apiParam><apiItemName>id</apiItemName><apiType value="String"/><apiDesc>object identifier
		 </apiDesc></apiParam><apiParam><apiItemName>clasz</apiItemName><apiType value="Class"/><apiDesc>object class
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Get an instance of the specified type and with the specified id
		 from the cache
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.googlecode.flexxb.cache:ICacheProvider:com.googlecode.flexxb.cache:ICacheProvider:getNewInstance"><apiName>getNewInstance</apiName><shortdesc>
		 Gets a new instance of the specified object class.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>newly created instance 
		 
		 </apiDesc><apiType value="any"/></apiReturn><apiParam><apiItemName>clasz</apiItemName><apiType value="Class"/><apiDesc>object class 
		 </apiDesc></apiParam><apiParam><apiItemName>id</apiItemName><apiType value="String"/><apiDesc>object identifier
		 </apiDesc></apiParam><apiParam><apiItemName>parameters</apiItemName><apiType value="Array"/><apiData>null</apiData><apiDesc>parameter list to be used when calling the constructor
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Gets a new instance of the specified object class. The constructor may
		 require arguments which are supplied with the parameters list.
		 After the instance is created it will be placed into the cache.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.googlecode.flexxb.cache:ICacheProvider:com.googlecode.flexxb.cache:ICacheProvider:isInCache"><apiName>isInCache</apiName><shortdesc>
		 Determines whether an object with the given id is aleady cached.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>true if there is an object cached under the given id and class.
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>id</apiItemName><apiType value="String"/><apiDesc>the id under which the object should have been cached
		 </apiDesc></apiParam><apiParam><apiItemName>clasz</apiItemName><apiType value="Class"/><apiDesc>the class of the object
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Determines whether an object with the given id is aleady cached.
		 </apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="com.googlecode.flexxb.cache:IPooledObject"><apiName>IPooledObject</apiName><shortdesc>
	 This is the interface for objects used by the object cache.</shortdesc><prolog><author>aCiobanu
	 
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 This is the interface for objects used by the object cache. Using this interface will give 
	 the implementor objects the ability to get their cleanup method called when they are returned 
	 to the cache. The object Cache can store any type of objects, regardless whether they implement 
	 IPooledObject or not. 
	 </apiDesc></apiClassifierDetail><apiOperation id="com.googlecode.flexxb.cache:IPooledObject:com.googlecode.flexxb.cache:IPooledObject:clear"><apiName>clear</apiName><shortdesc>
		 Called when the object is released from UI use and back into the object cache
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Called when the object is released from UI use and back into the object cache
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="com.googlecode.flexxb.cache:IPooledObject:com.googlecode.flexxb.cache:IPooledObject:type:get"><apiName>type</apiName><shortdesc>
		 Easy access to the object type 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
		 Easy access to the object type 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.googlecode.flexxb.cache:ObjectCache"><apiName>ObjectCache</apiName><shortdesc>
	 
	 </shortdesc><prolog><author>Alexutzutz
	 
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>com.googlecode.flexxb.cache:ICacheProvider</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 
	 </apiDesc></apiClassifierDetail><apiConstructor id="com.googlecode.flexxb.cache:ObjectCache:ObjectCache"><apiName>ObjectCache</apiName><shortdesc>
		 Constructor
		 
		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 Constructor
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="com.googlecode.flexxb.cache:ObjectCache:clearCache"><apiName>clearCache</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>typeList</apiItemName><apiType value="restParam"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="com.googlecode.flexxb.cache:ObjectCache:getFromCache"><apiName>getFromCache</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="any"/></apiReturn><apiParam><apiItemName>id</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>clasz</apiItemName><apiType value="Class"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="com.googlecode.flexxb.cache:ObjectCache:getNewInstance"><apiName>getNewInstance</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="any"/></apiReturn><apiParam><apiItemName>clasz</apiItemName><apiType value="Class"/></apiParam><apiParam><apiItemName>id</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>parameters</apiItemName><apiType value="Array"/><apiData>null</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="com.googlecode.flexxb.cache:ObjectCache:isInCache"><apiName>isInCache</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>id</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>clasz</apiItemName><apiType value="Class"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="com.googlecode.flexxb.cache:ObjectCache:putObject"><apiName>putObject</apiName><shortdesc>
		 Put an object in the cache
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>if the object was succesfuly cached.
		 
		 </apiDesc><apiType value="void"/></apiReturn><apiParam><apiItemName>id</apiItemName><apiType value="String"/><apiDesc>the id under which the object will be cached
		 </apiDesc></apiParam><apiParam><apiItemName>object</apiItemName><apiType value="Object"/><apiDesc>the object itself
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Put an object in the cache
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="com.googlecode.flexxb.cache:ObjectCache:instance:get"><apiName>instance</apiName><shortdesc>
		 Easy access instance.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiValueAccess value="read"/><apiValueClassifier>com.googlecode.flexxb.cache:ObjectCache</apiValueClassifier></apiValueDef><apiDesc>
		 Easy access instance. 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.googlecode.flexxb.cache:ObjectPool"><apiName>ObjectPool</apiName><shortdesc>
	 This is the cache for object instances.</shortdesc><prolog><author>aCiobanu
	 
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseInterface>com.googlecode.flexxb.cache:ICacheProvider</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 This is the cache for object instances. It maintains a pool for each 
	 object type. It works a bit differently... objects in pool are used 
	 then released to be used by others. While an object is in use it cannot
	 be reasigned to other. Once the user is done with the instance, it must 
	 call releaseInstance method. 
	 <p/> ObjectPool does not use an id. Objects are assigned baed on the used 
	 state. If all available objects are in use then a new instance will be 
	 created. If there is an object released, it will be passed on for use.
	 That's why sometimes it is required to clean the objects after use. This 
	 is where the IPooledObject interface comes to use by exposing the clear 
	 method which should be implemented by the objects that require some 
	 cleanup before being reused.
	 </apiDesc></apiClassifierDetail><apiConstructor id="com.googlecode.flexxb.cache:ObjectPool:ObjectPool"><apiName>ObjectPool</apiName><shortdesc>
		 Constructor
		 
		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 Constructor
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="com.googlecode.flexxb.cache:ObjectPool:beginNewSequence"><apiName>beginNewSequence</apiName><shortdesc>
		 Tell the cache the display of the attributes started so it will 
		 at the starting position in the object cache and return object 
		 instances until it runs out.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>args</apiItemName><apiType value="restParam"/><apiDesc>list of types
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Tell the cache the display of the attributes started so it will 
		 at the starting position in the object cache and return object 
		 instances until it runs out. After that new instances will be 
		 created and added in the cache  
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.googlecode.flexxb.cache:ObjectPool:clearCache"><apiName>clearCache</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>typeList</apiItemName><apiType value="restParam"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="com.googlecode.flexxb.cache:ObjectPool:getFromCache"><apiName>getFromCache</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="any"/></apiReturn><apiParam><apiItemName>id</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>type</apiItemName><apiType value="Class"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="com.googlecode.flexxb.cache:ObjectPool:getNewInstance"><apiName>getNewInstance</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="any"/></apiReturn><apiParam><apiItemName>clasz</apiItemName><apiType value="Class"/></apiParam><apiParam><apiItemName>id</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>parameters</apiItemName><apiType value="Array"/><apiData>null</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="com.googlecode.flexxb.cache:ObjectPool:isInCache"><apiName>isInCache</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>id</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>type</apiItemName><apiType value="Class"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="com.googlecode.flexxb.cache:ObjectPool:releaseInstance"><apiName>releaseInstance</apiName><shortdesc>
		 Mark the view instance as unused
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>instance</apiItemName><apiType value="Object"/><apiDesc>	 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Mark the view instance as unused
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="com.googlecode.flexxb.cache:ObjectPool:instance:get"><apiName>instance</apiName><shortdesc>
		 Easy access instance
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiValueAccess value="read"/><apiValueClassifier>com.googlecode.flexxb.cache:ObjectPool</apiValueClassifier></apiValueDef><apiDesc>
		 Easy access instance
		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage>