<?xml version="1.0" encoding="UTF-8"?><apiPackage id="com.googlecode.flexxb.util"><apiName>com.googlecode.flexxb.util</apiName><apiDetail/><apiOperation id="globalOperation:com.googlecode.flexxb.util:isArrayList"><apiName>isArrayList</apiName><shortdesc>
	 Function that determines wheather the object passed in is an ArrayList.
	 Since Flex 4 a new type was introduced, ArrayList.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>true if ArrayList, false otherwise
	 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>object</apiItemName><apiType value="Object"/><apiDesc>item to be checked. Can be anything: class, string, plain object. 
	 </apiDesc></apiParam></apiOperationDef><apiDesc></apiDesc></apiOperationDetail><related-links><link href="" invalidHref="mx.collections.ArrayList.xml"><linktext>mx.collections.ArrayList</linktext></link></related-links></apiOperation><apiOperation id="globalOperation:com.googlecode.flexxb.util:isVector"><apiName>isVector</apiName><shortdesc>
	 Function that determines wheather the object passed in is a vector.
	 Since Flash 10 a new type was introduced, Vector.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>true if vector, false otherwise
	  
	 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiDesc>item to be checked. Can be anything: class, string, plain object. 
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	 Function that determines wheather the object passed in is a vector.
	 Since Flash 10 a new type was introduced, Vector. To keep compatibility 
	 with other versions people may use we need to do a special check that would 
	 not involve direct linking the Vector class incode.
	 <p>It takes a single parameter, the object to be checked. If the object is a 
	 String, it is considered to be the qualified name of the class and it will get 
	 inspected for the vector's qualified name being present. If the object is a 
	 class or a plain AS3 object, the <codeph>getQualifiedClassName</codeph> method will
	 be used to extract the type name and compare it with the vector's name.</p> 
	 </apiDesc></apiOperationDetail></apiOperation><apiClassifier id="com.googlecode.flexxb.util:Instanciator"><apiName>Instanciator</apiName><shortdesc>
	 
	 </shortdesc><prolog><author>Alexutz
	 
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 
	 </apiDesc></apiClassifierDetail><apiConstructor id="com.googlecode.flexxb.util:Instanciator:Instanciator"><apiName>Instanciator</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiOperation id="com.googlecode.flexxb.util:Instanciator:getInstanceByName"><apiName>getInstanceByName</apiName><shortdesc>
		 
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>
		 
		 </apiDesc><apiType value="Object"/></apiReturn><apiParam><apiItemName>className</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.googlecode.flexxb.util:Instanciator:getInstance"><apiName>getInstance</apiName><shortdesc>
		 Dynamically create an instance with runtime known parameters.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>
		 
		 </apiDesc><apiType value="Object"/></apiReturn><apiParam><apiItemName>clasz</apiItemName><apiType value="Class"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>args</apiItemName><apiType value="Array"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Dynamically create an instance with runtime known parameters.
		 Restricted to max 10(ten) instance parameters.
		 TODO: Find a better way to do this!!!!!
		 </apiDesc></apiOperationDetail></apiOperation></apiClassifier></apiPackage>