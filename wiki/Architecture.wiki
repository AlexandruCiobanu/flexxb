#summary FlexXB architecture
#labels Phase-Implementation,Phase-Design

FlexXB accomplishes marshalling/unmarshalling of objects by using annotations defined on the model classes it works with. 

= Annotations =

=== XmlClass ===
 Syntax: {{{[XmlClass(alias="MyClass", useNamespaceFrom="elementFieldName", idField="fieldName", prefix="my",  uri="http://www.your.site.com/schema/", defaultValueField="fieldName")]}}}
  * {{{alias}}}: The name of the element/attribute that represents this object in the xml request/response;
  * {{{useNamespaceFrom}}}: Allows the class to use as class namespace a namespace defined by the type of one of the composing fields.
  * {{{idField}}} The name of the object's field that will be used to identify that object;
  * {{{prefix}}}: Namespace prefix that will be used to serialize objects of this class;
  * {{{uri}}}: Namespace uri for object representations received from and transmitted to server;
  * {{{defaultValueField}}}: name of the field whose value will be renderer as a free text element in the xml representation;
=== XmlAttribute ===
 Syntax:{{{[XmlAttribute(alias="attribute", ignoreOn="serialize|deserialize")]}}}
  * {{{alias}}}: The name of the attribute that represents this object in the xml request/response;
  * {{{ignoreOn}}}: Ignore this field from processing
=== ConstructorArg ===
Syntax:{{{[ConstructorArg(reference="FieldName", optional="true|false")]}}}
  * {{{reference}}}: Holds the name of one of the classes' fields. 
  * {{{optional}}}: Wether the parameter is optional or not in the constructor definition. Defaults to {{{false}}}.
=== XmlElement ===
 Syntax:{{{[XmlElement(alias="element", getFromCache="true|false", ignoreOn="serialize|deserialize", serializePartialElement="true|false")]}}}
  * {{{alias}}}: The name of the element that represents this object in the xml request/response;
  * {{{getFromCache}}}: Get the value of this field from the object cache, based on its id 
  * {{{ignoreOn}}}: Ignore this field from processing;
  * {{{serializePartialElement}}}: Serialize only the id of this field's value (implies that the field represents a complex object that has an id);
=== XmlArray ===
 Syntax:{{{[XmlArray(alias="element", memberName="NameOfArrayElement", getFromCache="true|false", type="my.full.type" ignoreOn="serialize|deserialize", serializePartialElement="true|false")]}}}
  * {{{alias}}}: The name of the element/attribute that represents this object in the xml request/response;
  * {{{memberName}}}: Optionaly specify the name that each of the items' xml rendering will have;
  * {{{getFromCache}}}: Get the members of the array representing this field's value from the object cache, based on their ids;
  * {{{type}}}: Specify the type of the array's members; 
  * {{{ignoreOn}}}: Ignore this field from processing;
  * {{{serializePartialElement}}}: Serialize only the ids of the array's member.